@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@model Chat.Models.IndexMessages

@{
    ViewData["Title"] = "Chat";
}

<div class="row">
    <div class="col-sm-8">

        <p class="text-danger">@ViewBag.LoginError</p>
        @if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
        {
            <form asp-action="PostMessage">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Text" class="control-label"></label>
                    <textarea asp-for="Text" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Text" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Nachricht senden" class="btn btn-primary" />
                </div>
            </form>
        } else
        {
            <div class="alert alert-info" role="alert">
                Um Nachrichten zu versenden, müssen Sie angemeldet sein.
            </div>
        }

        <hr />

        <div id="lastMessagesSentContainer">

            @foreach (var item in Model.AlreadySentMessages)
            {
                <div class="row ownContainer">
                    <div class="col-9">
                        <small>
                            <a asp-action="Profile" asp-controller="Account" asp-route-username="@item.User.Username" style="color: black;">@item.User.Username</a>
                        </small>
                    </div>

                    <div class="col-3">
                        <small class="text-secondary">
                            @item.PostedAt
                        </small>
                    </div>

                    <div class="col-12">
                        <p class="messageContent">
                            @item.Text
                        </p>
                    </div>
                    @if (HttpContextAccessor.HttpContext.User.Identity.IsAuthenticated)
                    {
                        <div class="col-11"></div>

                        <div class="col-1 text-center">
                            <form asp-action="LikeOrDislike">
                                @if (item.DidCurrentUserLike)
                                {
                                    <button type="submit" class="btn btn-danger" asp-action="LikeOrDislike" asp-route-messageid="@item.Id"><i class="bi bi-suit-heart-fill"></i></button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-outline-danger" asp-action="LikeOrDislike" asp-route-messageid="@item.Id"><i class="bi bi-suit-heart"></i></button>
                                }
                            </form>
                            <small class="text-danger"><b>@item.NumberOfLikes</b></small>
                        </div>
                    }
                </div>
            }

        </div>
    </div>
    <div class="col-sm-4">
        <div class="ownContainer" style="margin-top: 2.4rem;">
            <h3 class="text-center">Top 5 Hashtags der letzten 24 Stunden</h3>
            @foreach (var item in Model.TopHashtags)
            {
                <hr />
                <h4 class="text-center" style="color: orange;">@item</h4>
            }
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
